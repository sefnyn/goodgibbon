[Setup]
AppName=Gibbon
AppVerName=Gibbon @VERSION@
AllowRootDirectory=yes
DefaultDirName={pf}\Gibbon
DefaultGroupName=Gibbon
UninstallDisplayIcon={app}\gibbon.exe
Uninstallable=yes
AppPublisher=Guido Flohr
AppPublisherURL=http://www.gibbon.bg/
AppVersion=@VERSION@
AppContact=Guido Flohr <guido@imperia.net>
AppSupportURL=mailto:guido@imperia.net
AppCopyright=Guido Flohr <guido@imperia.net>
OutputBaseFilename=gibbon-setup-@VERSION@-INSTALLERREVISION
; Do NOT use the directive LicenseFile here! It will force users to 
; click a button in order to "accept" a license.  This is legally nonsense
; and against the spirit of Free Software! 
InfoBeforeFile=license.txt

[Components]
Name: "gtk"; Description: "GTK+ runtime environment"; Types: full compact custom; Flags: fixed
Name: "main"; Description: "Gibbon"; Types: full compact custom; Flags: fixed

Name: "locale"; Description: "Translations"; Types: full compact custom; Flags: fixed

[Tasks]
Name: common; Description: "For all users"; Components: main; Flags: exclusive
Name: user; Description: "For the current user only"; Components: main; Flags: exclusive unchecked
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Icons]
; Common task icons
Name: "{commonprograms}\{groupname}\Gibbon"; Filename: "{app}\bin\gibbon.exe"; Tasks: common
Name: "{commonprograms}\{groupname}\Uninstall Gibbon"; Filename: "{uninstallexe}"; Tasks: common
Name: "{commondesktop}\Gibbon"; Filename: "{app}\bin\gibbon.exe"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\Gibbon"; Filename: "{app}\bin\gibbon.exe"; Tasks: quicklaunchicon

; User task icons
Name: "{userprograms}\{groupname}\Gibbon"; Filename: "{app}\bin\gibbon.exe"; Tasks: user
Name: "{userprograms}\{groupname}\Uninstall Gibbon"; Filename: "{uninstallexe}"; Tasks: user

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"
Name: "de"; MessagesFile: "compiler:Languages\German.isl"
Name: "bg"; MessagesFile: ".\Bulgarian-5.1.11.isl"

[Files]

; All files
Source: "gtk\*"; DestDir: "{app}\"; Components: gtk; Flags: recursesubdirs
Source: "gibbon\*"; DestDir: "{app}\"; Components: main; Flags: recursesubdirs

[Run]
Filename: "{app}\bin\querymodules.bat"; StatusMsg: "Querying modules ..."; Flags: runhidden

[Registry]
Root: HKCU; Subkey: "Software\GSettings\apps\gibbon"; Flags: uninsdeletekey
Root: HKCU; Subkey: "Softare\GSettings\apps"; Flags: uninsdeletekeyifempty
Root: HKCU; Subkey: "Softare\GSettings"; Flags: uninsdeletekeyifempty

[Code]
{ Remove generated files not generated by the installer }

// Skip Components selection, all components are required anyway
function ShouldSkipPage(CurPageID: Integer): Boolean;
begin
	if CurPageID = wpSelectComponents then
		Result := True
	else
		Result := False;
end;

// Uninstall a previously installed version of Gibbon.
function GetUninstallCommand(): String;
var
        UninstallExe: String;
        Command: String;
begin
        UninstallExe := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\Gibbon_is1');
        Command := '';
        // Prefix can be HKLM or HKCU.
        if not RegQueryStringValue(HKLM, UninstallExe, 'UninstallString', Command) then
                RegQueryStringValue(HKCU, UninstallExe, 'UninstallString', Command);
        Result := Command;
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
        Command: String;
        var ExitCode: Integer;
begin
        if (CurStep = ssInstall) then
        begin
                Command := GetUninstallCommand ();
                if (Command <> '') then
                begin
                        Command := RemoveQuotes (Command);
                        // If that fails, a warning or error message will most
                        // probably pop up.  We therefore ignore the return
                        // value.
                        Exec (Command, '/SILENT /NORESTART /SUPPRESSMSGBOXES',
                              '', SW_HIDE, ewWaitUntilTerminated, ExitCode);
                end;
        end;
end;
